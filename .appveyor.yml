platform:
  - amd64
image: Visual Studio 2017

environment:
  matrix:
    - PYTHON: "C:\\Miniconda3-x64"

# For debugging uncomment the lines below
init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda config --set channel_priority strict
  - conda config --add channels conda-forge
  - conda config --add channels tpeulen
  - conda create -n tttrlib
  - activate tttrlib
  - conda info -a
  - conda install conda-build anaconda-client git nose coverage
  - git clone https://github.com/Fluorescence-Tools/conda-recipes.git
  - conda build conda-recipes/tttrlib
  - conda install tttrlib --use-local

# to run your custom scripts instead of automatic tests
test_script:
  - cmd: echo %CD%
  - cmd: cd C:\projects\tttrlib\test\
  - cmd: echo %CD%
  - nosetests

## scripts to run after tests
after_test:
  - sh: |
    # Only upload builds from tags
    if [[ $APPVEYOR_REPO_TAG == true && $APPVEYOR_REPO_NAME == "fluorescence-tools/tttrlib"]];
    then
      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN
      anaconda upload bld-dir/**/PACKAGENAME-*.tar.bz2
    fi

build: off

# For debugging uncomment the lines below
on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

notifications:
  - provider: Email
    to:
      - thomas.otavio.peulen@gmail.com
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: false
