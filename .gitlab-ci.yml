# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  MINICONDA_VERSION: "latest"
  MAMBA_VERSION: "0.10"

stages:
- build
- test
- deploy
- Trigger-cross-projects

build:linux:
  stage: build
  tags:
    - linux
  image: condaforge/mambaforge:latest
  before_script:
    - apt update -yq && apt -yq install build-essential doxygen   
  script:
    - mamba install boa
    - cp .condarc ~/.condarc
    - conda mambabuild conda-recipe --output-folder bld-dir
  artifacts:
    expire_in: 7 days
    paths:
      - bld-dir/

test:linux:
  variables:
    MINICONDA_OS: "Linux"
  stage: test
  tags:
    - linux
  image: ubuntu:latest
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt update -yq
    - apt install -yq procps wget git git-lfs
    # Download and install miniconda
    - wget https://repo.continuum.io/miniconda/Miniconda3-$MINICONDA_VERSION-$MINICONDA_OS-x86_64.sh -O miniconda.sh
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    # setup conda to always accept commands
    - conda config --set always_yes yes --set changeps1 no
  script:
    - echo "I am a test stage job for debian, running on docker"
    - source activate base
    - conda config --add channels "file://`pwd`/bld-dir"
    - conda config --add channels conda-forge
    - conda install mamba=$MAMBA_VERSION
    - git clone https://gitlab.peulen.xyz/tpeulen/tttr-data --depth 1
    - mamba install python tttrlib nose scipy
    - |
      cd test
      nosetests


deploy:conda:
  stage: deploy
  image: condaforge/mambaforge:latest
  tags:
    - linux
  dependencies:
    - build:linux
  script:
    - mamba install anaconda-client
    - echo $CI_COMMIT_REF_NAME
    - if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then ANACONDA_LABEL=main; else ANACONDA_LABEL=nightly; fi
    - anaconda -t ${ANACONDA_API_TOKEN} upload -l ${ANACONDA_LABEL} -u ${CONDA_USER} --force bld-dir/linux-64/*.tar.bz2

# deploy:doc:
#   stage: deploy
#   image: condaforge/mambaforge:latest
#   tags:
#     - linux
#   dependencies:
#     - build:linux
#   before_script:
#     - apt-get update -qy
#     # Latex documentation
#     - apt-get install -y texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended latexmk
#     # Make command
#     - apt-get install -y build-essential lftp
#     # see: https://bugs.launchpad.net/ubuntu/+source/lftp/+bug/1904601
#     # - apt-get install -y lftp=4.8.1-1ubuntu0.1 --allow-downgrades
#   script:
#     - echo "I am a deploy stage... Building documentation."
#     - source activate base
#     - conda config --add channels "file://`pwd`/bld-dir"
#     - cd doc
#     - mamba env update --file environment.yml
#     - conda activate doc
#     - echo "I am a deploy stage... Uploading documentation."
#     - if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then make all; else exit; fi
#     - lftp -c "set sftp:auto-confirm yes; set sftp:connect-program \"ssh -a -x -o UserKnownHostsFile=/dev/null\"; open -u $FTP_USERNAME,$FTP_PASSWORD sftp://peulen.xyz:2222; mirror -Rnev --delete ./_build/html/stable/ ./www/tttrlib/; bye"

# Downstream projects
tttrconvert:
  stage: Trigger-cross-projects
  trigger: chisurf/tttrconvert

fit2x:
  stage: Trigger-cross-projects
  trigger: tpeulen/fit2x

# Depends via fit2x on tttrlib
#scikit-fluorescence:
#  stage: Trigger-cross-projects
#  trigger: skf/scikit-fluorescence
