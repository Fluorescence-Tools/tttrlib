stages:
- build
- test
- deploy

.build: &build
  stage: build
  artifacts:
    paths:
      - bld-dir/
.build_posix: &build_posix
  <<: *build
  script:
    - ./tools/build.sh
.build:lnx: &build_lnx
  <<: *build_posix
  before_script:
    - source "/opt/conda/etc/profile.d/conda.sh"
    - conda activate /opt/conda/
    - git submodule update --init --recursive --remote
build:lnx_x86:
  <<: *build_lnx
  image:
    name: condaforge/linux-anvil-cos7-x86_64
    entrypoint: [ "/bin/bash", "-i", "-c" ]
  tags:
    - x86_64
build:lnx_ppc64le:
  <<: *build_lnx
  image:
    name: condaforge/linux-anvil-ppc64le
    entrypoint: [ "/bin/bash", "-i", "-c" ]
  tags:
    - ppc64le
build:lnx_aarch64:
  <<: *build_lnx
  image:
    name: condaforge/linux-anvil-aarch64
    entrypoint: [ "/bin/bash", "-i", "-c" ]
  tags:
    - aarch64
build:osx:
  <<: *build
  <<: *build_posix
  tags:
    - osx
  before_script:
    - git submodule update --init --recursive --remote
build:windows:
  <<: *build
  image: mambaforge:vs16
  tags:
    - win
  script:
    - cmd.exe
    - conda activate base
    - cd tools && git pull --force && cd..
    - .\tools\build.bat

test:linux:
  stage: test
  tags:
    - local
    - linux
  image: condaforge/mambaforge
  needs: ["build:lnx_x86"]
  before_script:
    - |
        export DEBIAN_FRONTEND=interactive
        export TZ=Europe/Berlin
        apt-get update -qy && apt-get install -qy git nfs-common # sshfs
  script:
    - |
        source activate base
        conda config --add channels "file://`pwd`/bld-dir"
        git clone https://gitlab.peulen.xyz/skf/tttrlib && cd tttrlib && git fetch && git switch $CI_COMMIT_REF_NAME
        mamba install python tttrlib nose scipy
        # requires runner in privileged mode see
        mount.nfs -o nolock 192.168.124.254:tank/www /srv
        # sshfs -o password_stdin -oStrictHostKeyChecking=no -o Ciphers=aes128-ctr -o Compression=yes -p 2222 $FTP_USERNAME@peulen.xyz:/www www <<< $FTP_PASSWORD
        ln -s /srv/tttr-data tttr-data
        nosetests test

deploy:conda:
  stage: deploy
  image: condaforge/mambaforge
  tags:
    - x86_64
    - linux
  before_script:
    - git submodule update --init --recursive --remote
  script:
    - ./tools/deploy.sh

deploy:doc:
# requires runner in privileged mode (setup in config.toml)
   stage: deploy
   image: condaforge/mambaforge
   tags:
     - local
     - linux
   needs: ["build:lnx_x86"]
   before_script:
    - |
        export DEBIAN_FRONTEND=interactive
        export TZ=Europe/Berlin
        apt-get update -qy && apt-get install -qy git nfs-common make
   script:
    - |
        source activate base
        git clone https://gitlab.peulen.xyz/skf/tttrlib && cd tttrlib && git fetch && git switch $CI_COMMIT_REF_NAME
        mount.nfs -o nolock 192.168.124.254:tank/www /srv && ln -s /srv/tttr-data tttr-data
        cd doc && mamba env update --file environment.yml && conda activate doc
        make html
        if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then rm -rf /srv/docs.peulen.xyz/tttrlib && mv -v _build/html/stable /srv/docs.peulen.xyz/tttrlib; fi

build:cibuildwheel:linux:
  stage: build
  image: python:3.8
  tags:
    - x86_64
    - linux  
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""

    # skip all but the basic tests
    # (comment the below line in a PR to debug a Gitlab-specific issue)
    PYTEST_ADDOPTS: -k "unit_test or test_0_basic" --suppress-no-test-exit-code
  script:
    - curl -sSL https://get.docker.com/ | sh
    - python -m pip install -e ".[dev]" pytest-custom-exit-code
    - python ./bin/run_tests.py

build:cibuildwheel:windows:
  stage: build
  tags:
    - win
  image: mcr.microsoft.com/windows/servercore:1809
  variables:
    PYTEST_ADDOPTS: -k "unit_test or test_0_basic" --suppress-no-test-exit-code
  before_script:
    - choco install python -y --version 3.8.6
  script:
    - py -m pip install -e ".[dev]" pytest-custom-exit-code
    - py bin\run_tests.py
