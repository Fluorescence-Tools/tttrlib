language: generic
sudo: required

os:
  - osx
  - linux

env:
  # Build and test package on all supported python versions
  - BUILD_TARGET=3.7 MINICONDA_VERSION=latest

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
  - wget https://repo.continuum.io/miniconda/Miniconda3-$MINICONDA_VERSION-$MINICONDA_OS-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda create -q -n build-environment python=$BUILD_TARGET conda-build anaconda-client jinja2 git nose coverage anaconda-client
  - source activate build-environment
  - git fetch --unshallow --tags --force
  - conda build conda-recipe --output-folder bld-dir
  - conda config --add channels "file://`pwd`/bld-dir"

install:
  - conda install tttrlib

script:
  # create a link from nosetests in test to make sure
  # that the correct nosetests is used
  - ln -sf $(which nosetests) $(pwd)/test/
  - cd $(pwd)/test/
  - echo $PWD
  - nosetests --with-coverage test_*.py
  - cd ..
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
      cd docs
      conda env create -f environment.yml
      conda activate docs_env
      # install requirements via pip due to memory limitations in RTD
      # build server (to have a common build environment)
      pip install -r requirements.txt
      # Use Sphinx and doxygen to make the html docs
      make html
      # Use doxygen to build the C++ API documentation.
      # Here, the value in tttrlib.__version__ is passed to PROJECT_NUMBER in
      # so that there is only a single version number to manage.
      (cat Doxyfile ; echo "PROJECT_NUMBER=$(python -c 'from __future__ import print_function; import tttrlib; print(tttrlib.__version__)')" ) | doxygen -
      # Tell GitHub not to use jekyll to compile the docs
      touch _build/html/.nojekyll
      cd ..
      conda deactivate
    fi

# Tell Travis CI to copy the documentation to the gh-pages branch of
# your GitHub repository.
deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN  # Set in travis-ci.org dashboard, marked secure
  keep-history: true
  on:
    branch: development
    condition: $TRAVIS_OS_NAME = linux
  local_dir: docs/_build/html/

after_success:
  - OS=$TRAVIS_OS_NAME-64
  - pip install codacy-coverage
  - coverage xml
  - python-codacy-coverage -r coverage.xml
  - |
    conda activate build-environment
    anaconda -t $ANACONDA_API_TOKEN upload -u $CONDA_USER -l nightly $CONDA_BLD_PATH/$OS/$PKG_NAME-`date +%Y.%m.%d`-0.tar.bz2 --force

notifications:
  email:
    recipients:
      - thomas.otavio.peulen@gmail.com
    on_success: change # default: change
    on_failure: always # default: always
