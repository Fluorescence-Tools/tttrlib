<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stdint_8h" kind="file" language="C++">
    <compoundname>stdint.h</compoundname>
    <includes local="no">limits.h</includes>
    <includes local="no">wchar.h</includes>
    <includedby refid="_header_8h" local="no">Header.h</includedby>
    <includedby refid="_record_reader_8h" local="no">RecordReader.h</includedby>
    <incdepgraph>
      <node id="43">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>limits.h</label>
      </node>
      <node id="45">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="49">
        <label>BeckerHickl.h</label>
        <link refid="_becker_hickl_8h_source"/>
      </node>
      <node id="46">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>Header.h</label>
        <link refid="_header_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>TTTR.h</label>
        <link refid="_t_t_t_r_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>RecordReader.h</label>
        <link refid="_record_reader_8h_source"/>
      </node>
      <node id="51">
        <label>TTTRReader.h</label>
        <link refid="_t_t_t_r_reader_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stdint_8h_1a3730e9bd68460c3bea497352ee69b9ae" prot="public" static="no">
        <name>_W64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="62" column="17" bodyfile="stdint.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1aadcf2a81af243df333b31efa6461ab8e" prot="public" static="no">
        <name>INT8_MIN</name>
        <initializer>((int8_t)_I8_MIN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="134" column="9" bodyfile="stdint.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1aaf7f29f45f1a513b4748a4e5014ddf6a" prot="public" static="no">
        <name>INT8_MAX</name>
        <initializer>_I8_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="135" column="9" bodyfile="stdint.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ad4e9955955b27624963643eac448118a" prot="public" static="no">
        <name>INT16_MIN</name>
        <initializer>((int16_t)_I16_MIN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="136" column="9" bodyfile="stdint.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ac58f2c111cc9989c86db2a7dc4fd84ca" prot="public" static="no">
        <name>INT16_MAX</name>
        <initializer>_I16_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="137" column="9" bodyfile="stdint.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a688eb21a22db27c2b2bd5836943cdcbe" prot="public" static="no">
        <name>INT32_MIN</name>
        <initializer>((int32_t)_I32_MIN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="138" column="9" bodyfile="stdint.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a181807730d4a375f848ba139813ce04f" prot="public" static="no">
        <name>INT32_MAX</name>
        <initializer>_I32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="139" column="9" bodyfile="stdint.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ab21f12f372f67b8ff0aa3432336ede67" prot="public" static="no">
        <name>INT64_MIN</name>
        <initializer>((int64_t)_I64_MIN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="140" column="9" bodyfile="stdint.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ad0d744f05898e32d01f73f8af3cd2071" prot="public" static="no">
        <name>INT64_MAX</name>
        <initializer>_I64_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="141" column="9" bodyfile="stdint.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1aeb4e270a084ee26fe73e799861bd0252" prot="public" static="no">
        <name>UINT8_MAX</name>
        <initializer>_UI8_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="142" column="9" bodyfile="stdint.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a3ea490c9b3617d4479bd80ef93cd5602" prot="public" static="no">
        <name>UINT16_MAX</name>
        <initializer>_UI16_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="143" column="9" bodyfile="stdint.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ab5eb23180f7cc12b7d6c04a8ec067fdd" prot="public" static="no">
        <name>UINT32_MAX</name>
        <initializer>_UI32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="144" column="9" bodyfile="stdint.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a30654b4b67d97c42ca3f9b6052dda916" prot="public" static="no">
        <name>UINT64_MAX</name>
        <initializer>_UI64_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="145" column="9" bodyfile="stdint.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a3e986cad833f63f420962ff60eda87e5" prot="public" static="no">
        <name>INT_LEAST8_MIN</name>
        <initializer>INT8_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="148" column="9" bodyfile="stdint.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1aa05109908fb2770f632d2b646b9f85bf" prot="public" static="no">
        <name>INT_LEAST8_MAX</name>
        <initializer>INT8_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="149" column="9" bodyfile="stdint.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a1f91bfd5820c2f27af3d260fc75813e1" prot="public" static="no">
        <name>INT_LEAST16_MIN</name>
        <initializer>INT16_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="150" column="9" bodyfile="stdint.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a7eb2a8e2a1c65d6c9ad0f86154890baa" prot="public" static="no">
        <name>INT_LEAST16_MAX</name>
        <initializer>INT16_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="151" column="9" bodyfile="stdint.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a2360a536116dd734820a6b5b3d560ce7" prot="public" static="no">
        <name>INT_LEAST32_MIN</name>
        <initializer>INT32_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="152" column="9" bodyfile="stdint.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a5618711a0a54f722190a3a1219e278c2" prot="public" static="no">
        <name>INT_LEAST32_MAX</name>
        <initializer>INT32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="153" column="9" bodyfile="stdint.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ac12b4f6966b57ad82feb683b284b4060" prot="public" static="no">
        <name>INT_LEAST64_MIN</name>
        <initializer>INT64_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="154" column="9" bodyfile="stdint.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a35d0f98a2e507fd1be779d49da92724e" prot="public" static="no">
        <name>INT_LEAST64_MAX</name>
        <initializer>INT64_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="155" column="9" bodyfile="stdint.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a2a80bde77ee1698d0f42f334adad4f2b" prot="public" static="no">
        <name>UINT_LEAST8_MAX</name>
        <initializer>UINT8_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="156" column="9" bodyfile="stdint.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a6ef6a1a518bbf516ca8b0180b11c358f" prot="public" static="no">
        <name>UINT_LEAST16_MAX</name>
        <initializer>UINT16_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="157" column="9" bodyfile="stdint.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a70cad8bacc9a6db301e1cdc86cc8d571" prot="public" static="no">
        <name>UINT_LEAST32_MAX</name>
        <initializer>UINT32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="158" column="9" bodyfile="stdint.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1aab530113fa96e280e49c3c138b0f917d" prot="public" static="no">
        <name>UINT_LEAST64_MAX</name>
        <initializer>UINT64_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="159" column="9" bodyfile="stdint.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1aad8fb982cb19143efd5ee9a1a7a89390" prot="public" static="no">
        <name>INT_FAST8_MIN</name>
        <initializer>INT8_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="162" column="9" bodyfile="stdint.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1acbcdb3bee0f5f904da5df8de69a80ca3" prot="public" static="no">
        <name>INT_FAST8_MAX</name>
        <initializer>INT8_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="163" column="9" bodyfile="stdint.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a169460a4e2a79138723d68d99372d958" prot="public" static="no">
        <name>INT_FAST16_MIN</name>
        <initializer>INT16_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="164" column="9" bodyfile="stdint.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a2fd35d0ea091e04caec504ff0042cf00" prot="public" static="no">
        <name>INT_FAST16_MAX</name>
        <initializer>INT16_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="165" column="9" bodyfile="stdint.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ad93df1652ed0635513d5efe4f1219926" prot="public" static="no">
        <name>INT_FAST32_MIN</name>
        <initializer>INT32_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="166" column="9" bodyfile="stdint.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ac96fa0f41b19e89f109e4f9913ca6635" prot="public" static="no">
        <name>INT_FAST32_MAX</name>
        <initializer>INT32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="167" column="9" bodyfile="stdint.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a50f0fdcb00ea2500cec0f3d6d45c36f3" prot="public" static="no">
        <name>INT_FAST64_MIN</name>
        <initializer>INT64_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="168" column="9" bodyfile="stdint.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a13c95cf9c209d8daacb36cbf0d5ba275" prot="public" static="no">
        <name>INT_FAST64_MAX</name>
        <initializer>INT64_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="169" column="9" bodyfile="stdint.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a2c6f97ea2d76d0cf6260c84046cdb44e" prot="public" static="no">
        <name>UINT_FAST8_MAX</name>
        <initializer>UINT8_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="170" column="9" bodyfile="stdint.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1aed28ca63d9b222f6f1377358fe73a183" prot="public" static="no">
        <name>UINT_FAST16_MAX</name>
        <initializer>UINT16_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="171" column="9" bodyfile="stdint.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ad51246a178143208b2db3315efd21c45" prot="public" static="no">
        <name>UINT_FAST32_MAX</name>
        <initializer>UINT32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="172" column="9" bodyfile="stdint.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1aeb74410af7781bc84b5f64ae7a8f4a17" prot="public" static="no">
        <name>UINT_FAST64_MAX</name>
        <initializer>UINT64_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="173" column="9" bodyfile="stdint.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a2aaa6d3aa1d7d1e0e326955aa24db752" prot="public" static="no">
        <name>INTPTR_MIN</name>
        <initializer>INT32_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="181" column="11" bodyfile="stdint.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a9e5742f2bae4a5283431a3c03499e3a9" prot="public" static="no">
        <name>INTPTR_MAX</name>
        <initializer>INT32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="182" column="11" bodyfile="stdint.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ab2355300ea19395357e62d780f4dd073" prot="public" static="no">
        <name>UINTPTR_MAX</name>
        <initializer>UINT32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="183" column="11" bodyfile="stdint.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a2b0a3edfc672154f606dc3ad26277b61" prot="public" static="no">
        <name>INTMAX_MIN</name>
        <initializer>INT64_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="187" column="9" bodyfile="stdint.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a022b9b0a3564d786244a4631847c37a3" prot="public" static="no">
        <name>INTMAX_MAX</name>
        <initializer>INT64_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="188" column="9" bodyfile="stdint.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1aa54fd5210434219e9027bfa0f0e325c8" prot="public" static="no">
        <name>UINTMAX_MAX</name>
        <initializer>UINT64_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="189" column="9" bodyfile="stdint.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ad9b88ba2fb858f98b50b38e49875d90e" prot="public" static="no">
        <name>PTRDIFF_MIN</name>
        <initializer>_I32_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="197" column="11" bodyfile="stdint.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1add2ef7bffac19cfdd1f4b5495409672f" prot="public" static="no">
        <name>PTRDIFF_MAX</name>
        <initializer>_I32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="198" column="11" bodyfile="stdint.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a21e605b9ac3a03b6de93cdf5a69e129f" prot="public" static="no">
        <name>SIG_ATOMIC_MIN</name>
        <initializer>INT_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="201" column="9" bodyfile="stdint.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a1f5fe9445d0ad0bee21bab1de4cc3e58" prot="public" static="no">
        <name>SIG_ATOMIC_MAX</name>
        <initializer>INT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="202" column="9" bodyfile="stdint.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a3c75bb398badb69c7577b21486f9963f" prot="public" static="no">
        <name>SIZE_MAX</name>
        <initializer>_UI32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="208" column="14" bodyfile="stdint.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a051084d5ebcabf282d9ca9bb2b891a78" prot="public" static="no">
        <name>WCHAR_MIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="214" column="11" bodyfile="stdint.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a2a823f3ccf2306cfbaa34d8addf66010" prot="public" static="no">
        <name>WCHAR_MAX</name>
        <initializer>_UI16_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="217" column="11" bodyfile="stdint.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a5285bc55170ae1701e599decacc7f001" prot="public" static="no">
        <name>WINT_MIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="220" column="9" bodyfile="stdint.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ad3f7b6bb8aa7d619017a91d3b2edc1ee" prot="public" static="no">
        <name>WINT_MAX</name>
        <initializer>_UI16_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="221" column="9" bodyfile="stdint.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1acf31df4f42272d793d752c4628c0f195" prot="public" static="no">
        <name>INT8_C</name>
        <param><defname>val</defname></param>
        <initializer>val##i8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="232" column="9" bodyfile="stdint.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ab8c7ef9b034497b6cbd51a82eb22943b" prot="public" static="no">
        <name>INT16_C</name>
        <param><defname>val</defname></param>
        <initializer>val##i16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="233" column="9" bodyfile="stdint.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a7df71d27f096826a76677178823f39bb" prot="public" static="no">
        <name>INT32_C</name>
        <param><defname>val</defname></param>
        <initializer>val##i32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="234" column="9" bodyfile="stdint.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a095799ae3fe39d90cfbbe21ad4713318" prot="public" static="no">
        <name>INT64_C</name>
        <param><defname>val</defname></param>
        <initializer>val##i64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="235" column="9" bodyfile="stdint.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a8caaafb4382e3c415f261b6580f0929d" prot="public" static="no">
        <name>UINT8_C</name>
        <param><defname>val</defname></param>
        <initializer>val##ui8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="237" column="9" bodyfile="stdint.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ac8ab4bd1a0343acea9b7ed3e05c5ad13" prot="public" static="no">
        <name>UINT16_C</name>
        <param><defname>val</defname></param>
        <initializer>val##ui16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="238" column="9" bodyfile="stdint.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a189f825ef34a1be844d384db2618ce12" prot="public" static="no">
        <name>UINT32_C</name>
        <param><defname>val</defname></param>
        <initializer>val##ui32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="239" column="9" bodyfile="stdint.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1a8da5373e041921aa34c2b6172ac3babc" prot="public" static="no">
        <name>UINT64_C</name>
        <param><defname>val</defname></param>
        <initializer>val##ui64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="240" column="9" bodyfile="stdint.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ad558c804c227da1f8e1844e5314e80c5" prot="public" static="no">
        <name>INTMAX_C</name>
        <initializer>INT64_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="243" column="9" bodyfile="stdint.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdint_8h_1ad7d1c8e3d3b8ba6eed942f6f7a0910db" prot="public" static="no">
        <name>UINTMAX_C</name>
        <initializer>UINT64_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="244" column="9" bodyfile="stdint.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stdint_8h_1aef44329758059c91c76d334e8fc09700" prot="public" static="no">
        <type>signed char</type>
        <definition>typedef signed char int8_t</definition>
        <argsstring></argsstring>
        <name>int8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="75" column="1" bodyfile="stdint.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a269259c924dce846340ddbb810db2e3c" prot="public" static="no">
        <type>signed short</type>
        <definition>typedef signed short int16_t</definition>
        <argsstring></argsstring>
        <name>int16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="76" column="1" bodyfile="stdint.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" prot="public" static="no">
        <type>signed int</type>
        <definition>typedef signed int int32_t</definition>
        <argsstring></argsstring>
        <name>int32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="77" column="1" bodyfile="stdint.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char uint8_t</definition>
        <argsstring></argsstring>
        <name>uint8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="78" column="1" bodyfile="stdint.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a273cf69d639a59973b6019625df33e30" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short uint16_t</definition>
        <argsstring></argsstring>
        <name>uint16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="79" column="1" bodyfile="stdint.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a435d1572bf3f880d55459d9805097f62" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int uint32_t</definition>
        <argsstring></argsstring>
        <name>uint32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="80" column="1" bodyfile="stdint.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" prot="public" static="no">
        <type>signed __int64</type>
        <definition>typedef signed __int64 int64_t</definition>
        <argsstring></argsstring>
        <name>int64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="90" column="1" bodyfile="stdint.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" prot="public" static="no">
        <type>unsigned __int64</type>
        <definition>typedef unsigned __int64 uint64_t</definition>
        <argsstring></argsstring>
        <name>uint64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="92" column="1" bodyfile="stdint.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1aadfd725efbf565422ab13db91ccca53c" prot="public" static="no">
        <type>int8_t</type>
        <definition>typedef int8_t int_least8_t</definition>
        <argsstring></argsstring>
        <name>int_least8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="96" column="1" bodyfile="stdint.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a17f379713bed2a28ac431760401253cd" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t int_least16_t</definition>
        <argsstring></argsstring>
        <name>int_least16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="97" column="1" bodyfile="stdint.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a2676b57a778795e5d0598970f1407f38" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t int_least32_t</definition>
        <argsstring></argsstring>
        <name>int_least32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="98" column="1" bodyfile="stdint.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a2073b30b3170d509bc756bf5c7862caf" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t int_least64_t</definition>
        <argsstring></argsstring>
        <name>int_least64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="99" column="1" bodyfile="stdint.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1ac76e2383debd5a3b100514044828961a" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t uint_least8_t</definition>
        <argsstring></argsstring>
        <name>uint_least8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="100" column="1" bodyfile="stdint.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a4f3f6e6631cb4aaeadf1c59ff597b2fb" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t uint_least16_t</definition>
        <argsstring></argsstring>
        <name>uint_least16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="101" column="1" bodyfile="stdint.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1ac0af81082969e5e3f4d939b1de7002ac" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t uint_least32_t</definition>
        <argsstring></argsstring>
        <name>uint_least32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="102" column="1" bodyfile="stdint.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1ab604f73dd823867b43702ae88b4f4445" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t uint_least64_t</definition>
        <argsstring></argsstring>
        <name>uint_least64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="103" column="1" bodyfile="stdint.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a880ed9ceb8621521452c81d03bd08cfb" prot="public" static="no">
        <type>int8_t</type>
        <definition>typedef int8_t int_fast8_t</definition>
        <argsstring></argsstring>
        <name>int_fast8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="106" column="1" bodyfile="stdint.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a9b7386d4af0e20ee32296d9a158c9f3a" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t int_fast16_t</definition>
        <argsstring></argsstring>
        <name>int_fast16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="107" column="1" bodyfile="stdint.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a920d4b149da0252281b6762375fb644a" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t int_fast32_t</definition>
        <argsstring></argsstring>
        <name>int_fast32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="108" column="1" bodyfile="stdint.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1afd072b9a94c14417246175f6442422ae" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t int_fast64_t</definition>
        <argsstring></argsstring>
        <name>int_fast64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="109" column="1" bodyfile="stdint.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1ad0fca8b15c218d2c687f8c373a71d228" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t uint_fast8_t</definition>
        <argsstring></argsstring>
        <name>uint_fast8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="110" column="1" bodyfile="stdint.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a6ed085329b153773ff76afa0702cf897" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t uint_fast16_t</definition>
        <argsstring></argsstring>
        <name>uint_fast16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="111" column="1" bodyfile="stdint.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a8f075c759c74e109e8184306c663809d" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t uint_fast32_t</definition>
        <argsstring></argsstring>
        <name>uint_fast32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="112" column="1" bodyfile="stdint.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a6fd055dddb7d91fab0635146851af8d5" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t uint_fast64_t</definition>
        <argsstring></argsstring>
        <name>uint_fast64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="113" column="1" bodyfile="stdint.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1abd3131a20f4053d808d4277db3e39a23" prot="public" static="no">
        <type>_W64 signed int</type>
        <definition>typedef _W64 signed int intptr_t</definition>
        <argsstring></argsstring>
        <name>intptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="120" column="1" bodyfile="stdint.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a31b85deecb45924320becd11d3ee16ce" prot="public" static="no">
        <type>_W64 unsigned int</type>
        <definition>typedef _W64 unsigned int uintptr_t</definition>
        <argsstring></argsstring>
        <name>uintptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="121" column="1" bodyfile="stdint.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a036cd61bb4b30bb510b9538af4cebd1d" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t intmax_t</definition>
        <argsstring></argsstring>
        <name>intmax_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="125" column="1" bodyfile="stdint.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a2ba5f6c0633401558d277b2c0e4f758d" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t uintmax_t</definition>
        <argsstring></argsstring>
        <name>uintmax_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stdint.h" line="126" column="1" bodyfile="stdint.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>ISO<sp/>C9x<sp/><sp/>compliant<sp/>stdint.h<sp/>for<sp/>Microsoft<sp/>Visual<sp/>Studio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>ISO/IEC<sp/>9899:TC2<sp/>Committee<sp/>draft<sp/>(May<sp/>6,<sp/>2005)<sp/>WG14/N1124<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2006-2008<sp/>Alexander<sp/>Chemeris</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>3.<sp/>The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MSC_VER<sp/>//<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Use<sp/>this<sp/>header<sp/>only<sp/>with<sp/>Microsoft<sp/>Visual<sp/>C++<sp/>compilers!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_MSC_VER<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MSC_STDINT_H_<sp/>//<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MSC_STDINT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MSC_VER<sp/>&gt;<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>Visual<sp/>Studio<sp/>6<sp/>in<sp/>C++<sp/>mode<sp/>and<sp/>for<sp/>many<sp/>Visual<sp/>Studio<sp/>versions<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compiling<sp/>for<sp/>ARM<sp/>we<sp/>should<sp/>wrap<sp/>&lt;wchar.h&gt;<sp/>include<sp/>with<sp/>&apos;extern<sp/>&quot;C++&quot;<sp/>{}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>compiler<sp/>give<sp/>many<sp/>errors<sp/>like<sp/>this:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>error<sp/>C2733:<sp/>second<sp/>C<sp/>linkage<sp/>of<sp/>overloaded<sp/>function<sp/>&apos;wmemchr&apos;<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>_W64<sp/>macros<sp/>to<sp/>mark<sp/>types<sp/>changing<sp/>their<sp/>size,<sp/>like<sp/>intptr_t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_W64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined(__midl)<sp/>&amp;&amp;<sp/>(defined(_X86_)<sp/>||<sp/>defined(_M_IX86))<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1300</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>_W64<sp/>__w64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>_W64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.1<sp/>Integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.1.1<sp/>Exact-width<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visual<sp/>Studio<sp/>6<sp/>and<sp/>Embedded<sp/>Visual<sp/>C++<sp/>4<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>realize<sp/>that,<sp/>e.g.<sp/>char<sp/>has<sp/>the<sp/>same<sp/>size<sp/>as<sp/>__int8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>give<sp/>up<sp/>on<sp/>__intX<sp/>for<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(_MSC_VER<sp/>&lt;<sp/>1300)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>int8_t;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>int16_t;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int32_t;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>uint8_t;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>uint16_t;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uint32_t;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>__int8<sp/><sp/><sp/><sp/><sp/>int8_t;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>__int16<sp/><sp/><sp/><sp/>int16_t;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>__int32<sp/><sp/><sp/><sp/>int32_t;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int8<sp/><sp/><sp/>uint8_t;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int16<sp/><sp/>uint16_t;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int32<sp/><sp/>uint32_t;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>__int64</highlight></codeline>
<codeline lineno="90"><highlight class="normal">int64_t;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int64</highlight></codeline>
<codeline lineno="92"><highlight class="normal">uint64_t;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.1.2<sp/>Minimum-width<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int8_t<sp/>int_least8_t;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/>int_least16_t;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/>int_least32_t;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int64_t<sp/>int_least64_t;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>uint_least8_t;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint16_t<sp/>uint_least16_t;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/>uint_least32_t;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/>uint_least64_t;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.1.3<sp/>Fastest<sp/>minimum-width<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int8_t<sp/>int_fast8_t;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/>int_fast16_t;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/>int_fast32_t;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int64_t<sp/>int_fast64_t;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>uint_fast8_t;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint16_t<sp/>uint_fast16_t;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/>uint_fast32_t;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/>uint_fast64_t;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.1.4<sp/>Integer<sp/>types<sp/>capable<sp/>of<sp/>holding<sp/>object<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64<sp/>//<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>__int64<sp/><sp/><sp/><sp/>intptr_t;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int64<sp/><sp/>uintptr_t;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>_WIN64<sp/>][</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>_W64<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intptr_t;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>_W64<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uintptr_t;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_WIN64<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.1.5<sp/>Greatest-width<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int64_t<sp/>intmax_t;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/>uintmax_t;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.2<sp/>Limits<sp/>of<sp/>specified-width<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__cplusplus)<sp/>||<sp/>defined(__STDC_LIMIT_MACROS)<sp/>//<sp/>[<sp/><sp/><sp/>See<sp/>footnote<sp/>220<sp/>at<sp/>page<sp/>257<sp/>and<sp/>footnote<sp/>221<sp/>at<sp/>page<sp/>259</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.2.1<sp/>Limits<sp/>of<sp/>exact-width<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT8_MIN<sp/><sp/><sp/><sp/><sp/>((int8_t)_I8_MIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT8_MAX<sp/><sp/><sp/><sp/><sp/>_I8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT16_MIN<sp/><sp/><sp/><sp/>((int16_t)_I16_MIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT16_MAX<sp/><sp/><sp/><sp/>_I16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT32_MIN<sp/><sp/><sp/><sp/>((int32_t)_I32_MIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT32_MAX<sp/><sp/><sp/><sp/>_I32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT64_MIN<sp/><sp/><sp/><sp/>((int64_t)_I64_MIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT64_MAX<sp/><sp/><sp/><sp/>_I64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT8_MAX<sp/><sp/><sp/><sp/>_UI8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_MAX<sp/><sp/><sp/>_UI16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_MAX<sp/><sp/><sp/>_UI32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT64_MAX<sp/><sp/><sp/>_UI64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.2.2<sp/>Limits<sp/>of<sp/>minimum-width<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_LEAST8_MIN<sp/><sp/><sp/><sp/>INT8_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_LEAST8_MAX<sp/><sp/><sp/><sp/>INT8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_LEAST16_MIN<sp/><sp/><sp/>INT16_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_LEAST16_MAX<sp/><sp/><sp/>INT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_LEAST32_MIN<sp/><sp/><sp/>INT32_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_LEAST32_MAX<sp/><sp/><sp/>INT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_LEAST64_MIN<sp/><sp/><sp/>INT64_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_LEAST64_MAX<sp/><sp/><sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_LEAST8_MAX<sp/><sp/><sp/>UINT8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_LEAST16_MAX<sp/><sp/>UINT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_LEAST32_MAX<sp/><sp/>UINT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_LEAST64_MAX<sp/><sp/>UINT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.2.3<sp/>Limits<sp/>of<sp/>fastest<sp/>minimum-width<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_FAST8_MIN<sp/><sp/><sp/><sp/>INT8_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_FAST8_MAX<sp/><sp/><sp/><sp/>INT8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_FAST16_MIN<sp/><sp/><sp/>INT16_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_FAST16_MAX<sp/><sp/><sp/>INT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_FAST32_MIN<sp/><sp/><sp/>INT32_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_FAST32_MAX<sp/><sp/><sp/>INT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_FAST64_MIN<sp/><sp/><sp/>INT64_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_FAST64_MAX<sp/><sp/><sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_FAST8_MAX<sp/><sp/><sp/>UINT8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_FAST16_MAX<sp/><sp/>UINT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_FAST32_MAX<sp/><sp/>UINT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_FAST64_MAX<sp/><sp/>UINT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.2.4<sp/>Limits<sp/>of<sp/>integer<sp/>types<sp/>capable<sp/>of<sp/>holding<sp/>object<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64<sp/>//<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>INTPTR_MIN<sp/><sp/><sp/>INT64_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>INTPTR_MAX<sp/><sp/><sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UINTPTR_MAX<sp/><sp/>UINT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>_WIN64<sp/>][</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>INTPTR_MIN<sp/><sp/><sp/>INT32_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>INTPTR_MAX<sp/><sp/><sp/>INT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UINTPTR_MAX<sp/><sp/>UINT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_WIN64<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.2.5<sp/>Limits<sp/>of<sp/>greatest-width<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTMAX_MIN<sp/><sp/><sp/>INT64_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTMAX_MAX<sp/><sp/><sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINTMAX_MAX<sp/><sp/>UINT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.3<sp/>Limits<sp/>of<sp/>other<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64<sp/>//<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PTRDIFF_MIN<sp/><sp/>_I64_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PTRDIFF_MAX<sp/><sp/>_I64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/>//<sp/>_WIN64<sp/>][</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PTRDIFF_MIN<sp/><sp/>_I32_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PTRDIFF_MAX<sp/><sp/>_I32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>_WIN64<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIG_ATOMIC_MIN<sp/><sp/>INT_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIG_ATOMIC_MAX<sp/><sp/>INT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIZE_MAX<sp/>//<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>_WIN64<sp/>//<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SIZE_MAX<sp/><sp/>_UI64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else<sp/>//<sp/>_WIN64<sp/>][</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SIZE_MAX<sp/><sp/>_UI32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif<sp/>//<sp/>_WIN64<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SIZE_MAX<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WCHAR_MIN<sp/>and<sp/>WCHAR_MAX<sp/>are<sp/>also<sp/>defined<sp/>in<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WCHAR_MIN<sp/>//<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WCHAR_MIN<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>WCHAR_MIN<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WCHAR_MAX<sp/>//<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WCHAR_MAX<sp/><sp/>_UI16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>WCHAR_MAX<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WINT_MIN<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WINT_MAX<sp/><sp/>_UI16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__STDC_LIMIT_MACROS<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.4<sp/>Limits<sp/>of<sp/>other<sp/>integer<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__cplusplus)<sp/>||<sp/>defined(__STDC_CONSTANT_MACROS)<sp/>//<sp/>[<sp/><sp/><sp/>See<sp/>footnote<sp/>224<sp/>at<sp/>page<sp/>260</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.4.1<sp/>Macros<sp/>for<sp/>minimum-width<sp/>integer<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT8_C(val)<sp/><sp/>val##i8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT16_C(val)<sp/>val##i16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT32_C(val)<sp/>val##i32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT64_C(val)<sp/>val##i64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT8_C(val)<sp/><sp/>val##ui8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_C(val)<sp/>val##ui16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_C(val)<sp/>val##ui32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT64_C(val)<sp/>val##ui64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>7.18.4.2<sp/>Macros<sp/>for<sp/>greatest-width<sp/>integer<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTMAX_C<sp/><sp/><sp/>INT64_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINTMAX_C<sp/><sp/>UINT64_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__STDC_CONSTANT_MACROS<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_MSC_STDINT_H_<sp/>]</highlight></codeline>
    </programlisting>
    <location file="stdint.h"/>
  </compounddef>
</doxygen>
