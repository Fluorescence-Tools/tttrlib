<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceswig" kind="namespace" language="C++">
    <compoundname>swig</compoundname>
    <innerclass refid="structswig_1_1from__key__oper" prot="public">swig::from_key_oper</innerclass>
    <innerclass refid="structswig_1_1from__oper" prot="public">swig::from_oper</innerclass>
    <innerclass refid="structswig_1_1from__value__oper" prot="public">swig::from_value_oper</innerclass>
    <innerclass refid="structswig_1_1noconst__traits" prot="public">swig::noconst_traits</innerclass>
    <innerclass refid="structswig_1_1noconst__traits_3_01const_01_type_01_4" prot="public">swig::noconst_traits&lt; const Type &gt;</innerclass>
    <innerclass refid="structswig_1_1pointer__category" prot="public">swig::pointer_category</innerclass>
    <innerclass refid="structswig_1_1stop__iteration" prot="public">swig::stop_iteration</innerclass>
    <innerclass refid="classswig_1_1_swig_ptr___py_object" prot="public">swig::SwigPtr_PyObject</innerclass>
    <innerclass refid="structswig_1_1_swig_py_iterator" prot="public">swig::SwigPyIterator</innerclass>
    <innerclass refid="classswig_1_1_swig_py_iterator___t" prot="public">swig::SwigPyIterator_T</innerclass>
    <innerclass refid="classswig_1_1_swig_py_iterator_closed___t" prot="public">swig::SwigPyIteratorClosed_T</innerclass>
    <innerclass refid="classswig_1_1_swig_py_iterator_open___t" prot="public">swig::SwigPyIteratorOpen_T</innerclass>
    <innerclass refid="structswig_1_1_swig_py_map_iterator___t" prot="public">swig::SwigPyMapIterator_T</innerclass>
    <innerclass refid="structswig_1_1_swig_py_map_key_iterator___t" prot="public">swig::SwigPyMapKeyIterator_T</innerclass>
    <innerclass refid="structswig_1_1_swig_py_map_value_i_terator___t" prot="public">swig::SwigPyMapValueITerator_T</innerclass>
    <innerclass refid="structswig_1_1_swig_py_sequence___arrow_proxy" prot="public">swig::SwigPySequence_ArrowProxy</innerclass>
    <innerclass refid="structswig_1_1_swig_py_sequence___cont" prot="public">swig::SwigPySequence_Cont</innerclass>
    <innerclass refid="structswig_1_1_swig_py_sequence___input_iterator" prot="public">swig::SwigPySequence_InputIterator</innerclass>
    <innerclass refid="structswig_1_1_swig_py_sequence___ref" prot="public">swig::SwigPySequence_Ref</innerclass>
    <innerclass refid="structswig_1_1_swig_var___py_object" prot="public">swig::SwigVar_PyObject</innerclass>
    <innerclass refid="structswig_1_1traits" prot="public">swig::traits</innerclass>
    <innerclass refid="structswig_1_1traits_3_01_py_object_01_5_01_4" prot="public">swig::traits&lt; PyObject * &gt;</innerclass>
    <innerclass refid="structswig_1_1traits_3_01std_1_1map_3_01std_1_1string_00_01std_1_1string_00_01std_1_1less_3_01stb4c8f1700a1e872539a20cebacbb44c7" prot="public">swig::traits&lt; std::map&lt; std::string, std::string, std::less&lt; std::string &gt;, std::allocator&lt; std::pair&lt; std::string const, std::string &gt; &gt; &gt; &gt;</innerclass>
    <innerclass refid="structswig_1_1traits_3_01std_1_1pair_3_01std_1_1string_00_01std_1_1string_01_4_01_4" prot="public">swig::traits&lt; std::pair&lt; std::string, std::string &gt; &gt;</innerclass>
    <innerclass refid="structswig_1_1traits_3_01std_1_1string_01_4" prot="public">swig::traits&lt; std::string &gt;</innerclass>
    <innerclass refid="structswig_1_1traits_3_01_type_01_5_01_4" prot="public">swig::traits&lt; Type * &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__as" prot="public">swig::traits_as</innerclass>
    <innerclass refid="structswig_1_1traits__as_3_01_type_01_5_00_01pointer__category_01_4" prot="public">swig::traits_as&lt; Type *, pointer_category &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__as_3_01_type_00_01pointer__category_01_4" prot="public">swig::traits_as&lt; Type, pointer_category &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__as_3_01_type_00_01value__category_01_4" prot="public">swig::traits_as&lt; Type, value_category &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__asptr" prot="public">swig::traits_asptr</innerclass>
    <innerclass refid="structswig_1_1traits__asptr_3_01std_1_1map_3_01_k_00_01_t_00_01_compare_00_01_alloc_01_4_01_4" prot="public">swig::traits_asptr&lt; std::map&lt; K, T, Compare, Alloc &gt; &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__asptr_3_01std_1_1pair_3_01_t_00_01_u_01_4_01_4" prot="public">swig::traits_asptr&lt; std::pair&lt; T, U &gt; &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__asptr__stdseq" prot="public">swig::traits_asptr_stdseq</innerclass>
    <innerclass refid="structswig_1_1traits__asval" prot="public">swig::traits_asval</innerclass>
    <innerclass refid="structswig_1_1traits__asval_3_01_py_object_01_5_4" prot="public">swig::traits_asval&lt; PyObject *&gt;</innerclass>
    <innerclass refid="structswig_1_1traits__asval_3_01std_1_1string_01_4" prot="public">swig::traits_asval&lt; std::string &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__asval_3_01_type_01_5_01_4" prot="public">swig::traits_asval&lt; Type * &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__check" prot="public">swig::traits_check</innerclass>
    <innerclass refid="structswig_1_1traits__check_3_01_py_object_01_5_00_01value__category_01_4" prot="public">swig::traits_check&lt; PyObject *, value_category &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__check_3_01_type_00_01pointer__category_01_4" prot="public">swig::traits_check&lt; Type, pointer_category &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__check_3_01_type_00_01value__category_01_4" prot="public">swig::traits_check&lt; Type, value_category &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__from" prot="public">swig::traits_from</innerclass>
    <innerclass refid="structswig_1_1traits__from_3_01const_01_type_01_5_01_4" prot="public">swig::traits_from&lt; const Type * &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__from_3_01_py_object_01_5_01_4" prot="public">swig::traits_from&lt; PyObject * &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__from_3_01std_1_1map_3_01_k_00_01_t_00_01_compare_00_01_alloc_01_4_01_4" prot="public">swig::traits_from&lt; std::map&lt; K, T, Compare, Alloc &gt; &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__from_3_01std_1_1pair_3_01_t_00_01_u_01_4_01_4" prot="public">swig::traits_from&lt; std::pair&lt; T, U &gt; &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__from_3_01std_1_1string_01_4" prot="public">swig::traits_from&lt; std::string &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__from_3_01_type_01_5_01_4" prot="public">swig::traits_from&lt; Type * &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__from__ptr" prot="public">swig::traits_from_ptr</innerclass>
    <innerclass refid="structswig_1_1traits__from__stdseq" prot="public">swig::traits_from_stdseq</innerclass>
    <innerclass refid="structswig_1_1traits__info" prot="public">swig::traits_info</innerclass>
    <innerclass refid="structswig_1_1traits__info_3_01_type_01_5_01_4" prot="public">swig::traits_info&lt; Type * &gt;</innerclass>
    <innerclass refid="structswig_1_1traits__reserve" prot="public">swig::traits_reserve</innerclass>
    <innerclass refid="structswig_1_1value__category" prot="public">swig::value_category</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1ae90796b330cfb3adb7d76612cab3ede9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>const char *</type>
        <definition>const char* swig::type_name</definition>
        <argsstring>()</argsstring>
        <name>type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="3727" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="3727" bodyend="3729"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a9c6f187a18af145322c3a3d6faad4ec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
        <definition>swig_type_info* swig::type_info</definition>
        <argsstring>()</argsstring>
        <name>type_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="3757" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="3757" bodyend="3759"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a62bf3d7d1ef1d4e3717f290cbe930bdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>PyObject *</type>
        <definition>PyObject* swig::from</definition>
        <argsstring>(const Type &amp;val)</argsstring>
        <name>from</name>
        <param>
          <type>const Type &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="3816" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="3816" bodyend="3818"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1ae03eccbf86cf1d7ce91b7d50d01531b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>PyObject *</type>
        <definition>PyObject* swig::from_ptr</definition>
        <argsstring>(Type *val, int owner)</argsstring>
        <name>from_ptr</name>
        <param>
          <type>Type *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="3821" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="3821" bodyend="3823"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1aafe1fc46b9f89108d98d52d7bca8942b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int swig::asptr</definition>
        <argsstring>(PyObject *obj, Type **vptr)</argsstring>
        <name>asptr</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>Type **</type>
          <declname>vptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="3842" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="3842" bodyend="3844"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a0c849f14b53dbad5c78124f7d7be69f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int swig::asval</definition>
        <argsstring>(PyObject *obj, Type *val)</argsstring>
        <name>asval</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>Type *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="3887" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="3887" bodyend="3889"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a67bb415fcd0242b33b98332e38040546" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>Type</type>
        <definition>Type swig::as</definition>
        <argsstring>(PyObject *obj, bool te=false)</argsstring>
        <name>as</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>te</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="3950" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="3950" bodyend="3952"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a428f235cf1ad33edc806647c1392240d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool swig::check</definition>
        <argsstring>(PyObject *obj)</argsstring>
        <name>check</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="3971" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="3971" bodyend="3973"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1ad634e52c1b165ad5b3b7dcfda9eccec0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Difference</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t swig::check_index</definition>
        <argsstring>(Difference i, size_t size, bool insert=false)</argsstring>
        <name>check_index</name>
        <param>
          <type>Difference</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insert</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4061" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4061" bodyend="4071"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1aa9b510369aeb29e93ad75379c3ea447d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Difference</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swig::slice_adjust</definition>
        <argsstring>(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &amp;ii, Difference &amp;jj, bool insert=false)</argsstring>
        <name>slice_adjust</name>
        <param>
          <type>Difference</type>
          <declname>i</declname>
        </param>
        <param>
          <type>Difference</type>
          <declname>j</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>Difference &amp;</type>
          <declname>ii</declname>
        </param>
        <param>
          <type>Difference &amp;</type>
          <declname>jj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insert</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4075" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4075" bodyend="4111"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a9e303b7ffb07262184774567f345a51e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Sequence</type>
          </param>
          <param>
            <type>class Difference</type>
          </param>
        </templateparamlist>
        <type>Sequence::iterator</type>
        <definition>Sequence::iterator swig::getpos</definition>
        <argsstring>(Sequence *self, Difference i)</argsstring>
        <name>getpos</name>
        <param>
          <type>Sequence *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>Difference</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4115" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4115" bodyend="4119"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a3e4de99498e78ee45e114f32a533f42e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Sequence</type>
          </param>
          <param>
            <type>class Difference</type>
          </param>
        </templateparamlist>
        <type>Sequence::const_iterator</type>
        <definition>Sequence::const_iterator swig::cgetpos</definition>
        <argsstring>(const Sequence *self, Difference i)</argsstring>
        <name>cgetpos</name>
        <param>
          <type>const Sequence *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>Difference</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4123" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4123" bodyend="4127"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1accad4d3c48f18c8eeb744c4f507bfcc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Sequence</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swig::erase</definition>
        <argsstring>(Sequence *seq, const typename Sequence::iterator &amp;position)</argsstring>
        <name>erase</name>
        <param>
          <type>Sequence *</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>const typename Sequence::iterator &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4131" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4131" bodyend="4133"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a45270051abad591470793777e97cc8ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Sequence</type>
          </param>
          <param>
            <type>class Difference</type>
          </param>
        </templateparamlist>
        <type>Sequence *</type>
        <definition>Sequence* swig::getslice</definition>
        <argsstring>(const Sequence *self, Difference i, Difference j, Py_ssize_t step)</argsstring>
        <name>getslice</name>
        <param>
          <type>const Sequence *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>Difference</type>
          <declname>i</declname>
        </param>
        <param>
          <type>Difference</type>
          <declname>j</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4144" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4144" bodyend="4183"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a697380d209f2d60ec96b1b461779d181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Sequence</type>
          </param>
          <param>
            <type>class Difference</type>
          </param>
          <param>
            <type>class InputSeq</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swig::setslice</definition>
        <argsstring>(Sequence *self, Difference i, Difference j, Py_ssize_t step, const InputSeq &amp;is=InputSeq())</argsstring>
        <name>setslice</name>
        <param>
          <type>Sequence *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>Difference</type>
          <declname>i</declname>
        </param>
        <param>
          <type>Difference</type>
          <declname>j</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type>const InputSeq &amp;</type>
          <declname>is</declname>
          <defval>InputSeq()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4187" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4187" bodyend="4246"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a9d3d629d8459e58b1e78a5a1ff378bf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Sequence</type>
          </param>
          <param>
            <type>class Difference</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swig::delslice</definition>
        <argsstring>(Sequence *self, Difference i, Difference j, Py_ssize_t step)</argsstring>
        <name>delslice</name>
        <param>
          <type>Sequence *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>Difference</type>
          <declname>i</declname>
        </param>
        <param>
          <type>Difference</type>
          <declname>j</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4250" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4250" bodyend="4284"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a6805f9c4a87ccbe557a92cfb57a40796" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutIter</type>
          </param>
        </templateparamlist>
        <type><ref refid="structswig_1_1_swig_py_iterator" kindref="compound">SwigPyIterator</ref> *</type>
        <definition>SwigPyIterator* swig::make_output_iterator</definition>
        <argsstring>(const OutIter &amp;current, const OutIter &amp;begin, const OutIter &amp;end, PyObject *seq=0)</argsstring>
        <name>make_output_iterator</name>
        <param>
          <type>const OutIter &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>const OutIter &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const OutIter &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>seq</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4489" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4489" bodyend="4492"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1abaeb0c78f71036fb0e597f10bdc6aa67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutIter</type>
          </param>
        </templateparamlist>
        <type><ref refid="structswig_1_1_swig_py_iterator" kindref="compound">SwigPyIterator</ref> *</type>
        <definition>SwigPyIterator* swig::make_output_iterator</definition>
        <argsstring>(const OutIter &amp;current, PyObject *seq=0)</argsstring>
        <name>make_output_iterator</name>
        <param>
          <type>const OutIter &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>seq</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="4496" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="4496" bodyend="4499"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1ad10b8f1b53b61dd4a9101e1cd8614262" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SwigPySeq</type>
          </param>
          <param>
            <type>class Seq</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swig::assign</definition>
        <argsstring>(const SwigPySeq &amp;swigpyseq, Seq *seq)</argsstring>
        <name>assign</name>
        <param>
          <type>const SwigPySeq &amp;</type>
          <declname>swigpyseq</declname>
        </param>
        <param>
          <type>Seq *</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="5137" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="5137" bodyend="5144"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a821c027c586b192c35cbce276cb0b878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutIter</type>
          </param>
        </templateparamlist>
        <type><ref refid="structswig_1_1_swig_py_iterator" kindref="compound">SwigPyIterator</ref> *</type>
        <definition>SwigPyIterator* swig::make_output_key_iterator</definition>
        <argsstring>(const OutIter &amp;current, const OutIter &amp;begin, const OutIter &amp;end, PyObject *seq=0)</argsstring>
        <name>make_output_key_iterator</name>
        <param>
          <type>const OutIter &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>const OutIter &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const OutIter &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>seq</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="5259" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="5259" bodyend="5262"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a1641027ecf602f2adca1a601c95b8111" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutIter</type>
          </param>
        </templateparamlist>
        <type><ref refid="structswig_1_1_swig_py_iterator" kindref="compound">SwigPyIterator</ref> *</type>
        <definition>SwigPyIterator* swig::make_output_value_iterator</definition>
        <argsstring>(const OutIter &amp;current, const OutIter &amp;begin, const OutIter &amp;end, PyObject *seq=0)</argsstring>
        <name>make_output_value_iterator</name>
        <param>
          <type>const OutIter &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>const OutIter &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const OutIter &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>seq</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="5277" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="5277" bodyend="5280"/>
      </memberdef>
      <memberdef kind="function" id="tttrlib__wrap_8cpp_1a2a372fe0bff2d95ccf819666e2074400" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SwigPySeq</type>
          </param>
          <param>
            <type>class K</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class Compare</type>
          </param>
          <param>
            <type>class Alloc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swig::assign</definition>
        <argsstring>(const SwigPySeq &amp;swigpyseq, std::map&lt; K, T, Compare, Alloc &gt; *map)</argsstring>
        <name>assign</name>
        <param>
          <type>const SwigPySeq &amp;</type>
          <declname>swigpyseq</declname>
        </param>
        <param>
          <type>std::map&lt; K, T, Compare, Alloc &gt; *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tttrlib_wrap.cpp" line="5287" column="1" bodyfile="tttrlib_wrap.cpp" bodystart="5287" bodyend="5293"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="tttrlib_wrap.cpp" line="3086" column="1"/>
  </compounddef>
</doxygen>
