<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_t_t_t_r_8h" kind="file" language="C++">
    <compoundname>TTTR.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="yes">hdf5.h</includes>
    <includes local="yes">H5Tpublic.h</includes>
    <includes refid="_record_reader_8h" local="yes">RecordReader.h</includes>
    <includes refid="_header_8h" local="yes">Header.h</includes>
    <includedby refid="_t_t_t_r_reader_8h" local="yes">TTTRReader.h</includedby>
    <incdepgraph>
      <node id="35">
        <label>stdint.h</label>
      </node>
      <node id="36">
        <label>string</label>
      </node>
      <node id="40">
        <label>map</label>
      </node>
      <node id="45">
        <label>Header.h</label>
        <link refid="_header_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>vector</label>
      </node>
      <node id="42">
        <label>hdf5.h</label>
      </node>
      <node id="37">
        <label>iostream</label>
      </node>
      <node id="34">
        <label>TTTR.h</label>
        <link refid="_t_t_t_r_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>RecordReader.h</label>
        <link refid="_record_reader_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>H5Tpublic.h</label>
      </node>
      <node id="39">
        <label>stdio.h</label>
      </node>
      <node id="41">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="46">
        <label>TTTR.h</label>
        <link refid="_t_t_t_r_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>TTTRReader.h</label>
        <link refid="_t_t_t_r_reader_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_t_t_t_r" prot="public">TTTR</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_t_t_t_r_8h_1a411c46599e926f8cdf49c63957255359" prot="public" static="no">
        <name>_CRT_SECURE_NO_DEPRECATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="15" column="9" bodyfile="TTTR.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_t_t_t_r_8h_1a4997b4a679c7559512d50124247a298b" prot="public" static="no">
        <name>TTTRLIB_TTTR_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="18" column="9" bodyfile="TTTR.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_t_t_t_r_8h_1a90037217092a28ba55d4a120857c9920" prot="public" static="no">
        <name>RECORD_PHOTON</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="34" column="9" bodyfile="TTTR.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_t_t_t_r_8h_1aa545ae3a9b7315dc05d654f72394873b" prot="public" static="no">
        <name>RECORD_MARKER</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="35" column="9" bodyfile="TTTR.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_t_t_t_r_8h_1a26b62a26d7be9fc51763e53d6dbdf2ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t determine_number_of_records_by_file_size</definition>
        <argsstring>(std::FILE *fpin, size_t offset, size_t bytes_per_record)</argsstring>
        <name>determine_number_of_records_by_file_size</name>
        <param>
          <type>std::FILE *</type>
          <declname>fpin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes_per_record</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determines the number of records in a <ref refid="class_t_t_t_r" kindref="compound">TTTR</ref> files (for use with not HDF5)</para><para>Calculates the number of records in the file based on the file size. if <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is passed the number of records is calculated by the file size the number of bytes in the file - offset and </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_per_record.</parametername>
</parameternamelist>
<parameterdescription>
<para>If </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is not specified the current location of the file pointer is used as an offset. If </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_per_record</parametername>
</parameternamelist>
<parameterdescription>
<para>is not specified the attribute value bytes_per_record of the class instance is used.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_per_record</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_t_t_t_r_8h_1aa59853131efc1250aab72d6f302f9082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_by_count_rate</definition>
        <argsstring>(int **out, int *n_out, unsigned long *time, int n_time, unsigned long tw, int n_ph_max)</argsstring>
        <name>selection_by_count_rate</name>
        <param>
          <type>int **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_out</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_time</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>tw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_ph_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A count rate (cr) filter that returns an array containing a list of indices where the cr was smaller than a specified cr.</para><para>The filter is applied to a series of consecutive time events specified by the C type array <parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_t_t_t_r_8h_1a1407532c07ea37bb757ae0af51994667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_ranges_channel</definition>
        <argsstring>(int **ranges, int *n_range, short *channel, int n_channel, int selection_channel)</argsstring>
        <name>get_ranges_channel</name>
        <param>
          <type>int **</type>
          <declname>ranges</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_range</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selection_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ranges</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_range</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_time</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_t_t_t_r_8h_1a8811bfe0a582972e8da026311c8bdf7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void getIndicesByChannel</definition>
        <argsstring>(unsigned long **out, int *n_out, long *in, int n_in, short *routing_channels, int n_routing_channels)</argsstring>
        <name>getIndicesByChannel</name>
        <param>
          <type>unsigned long **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_out</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_in</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>routing_channels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_routing_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_out</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_in</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>routing_channels</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_routing_channels</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_t_t_t_r_8h_1a8a796064eedb4b1bac8022ec564fa830" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void get_array</definition>
        <argsstring>(size_t n_valid_events, T *array, T **out, int *n_out)</argsstring>
        <name>get_array</name>
        <param>
          <type>size_t</type>
          <declname>n_valid_events</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>T **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="122" column="1" bodyfile="TTTR.h" bodystart="122" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_t_t_t_r_8h_1a01be187530de4f790015978c6eff97c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_ranges_time_window</definition>
        <argsstring>(int **ranges, int *n_range, unsigned long *time, int n_time, int tw_min, int tw_max, int n_ph_min, int n_ph_max)</argsstring>
        <name>get_ranges_time_window</name>
        <param>
          <type>int **</type>
          <declname>ranges</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_range</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tw_min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tw_max</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_ph_min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_ph_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determines time windows for an array of consecutive time events based on</para><para>The function determines for an array of consecutive time events passed to the function by the argument <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>an interleaved array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_windows</parametername>
</parameternamelist>
<parameterdescription>
<para>containing a list of time windows (tw). In the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_windows</parametername>
</parameternamelist>
<parameterdescription>
<para>the beginning and the end of the tws are interleaved, e.g., for two time windows <verbatim> [begin1, end1, begin2, end2]
</verbatim></para></parameterdescription>
</parameteritem>
</parameterlist>
The returned beginnings and ends refer to the index of the photons in the array of consecutive times <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
The selection of the tws can be adjusted by the parameters <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tw_min</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TTTR.h" line="177" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2019<sp/>by<sp/>Thomas-Otavio<sp/>Peulen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>library<sp/>tttrlib.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>tttrlib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MIT<sp/>License.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/>tttrlib<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="_t_t_t_r_8h_1a411c46599e926f8cdf49c63957255359" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CRT_SECURE_NO_DEPRECATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TTTRLIB_TTTR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="_t_t_t_r_8h_1a4997b4a679c7559512d50124247a298b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TTTRLIB_TTTR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hdf5.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;H5Tpublic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_record_reader_8h" kindref="compound">RecordReader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_header_8h" kindref="compound">Header.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="_t_t_t_r_8h_1a90037217092a28ba55d4a120857c9920" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RECORD_PHOTON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="_t_t_t_r_8h_1aa545ae3a9b7315dc05d654f72394873b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RECORD_MARKER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_t_t_t_r_8h_1a26b62a26d7be9fc51763e53d6dbdf2ec" kindref="member">determine_number_of_records_by_file_size</ref>(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::FILE<sp/>*fpin,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_per_record</highlight></codeline>
<codeline lineno="55"><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_t_t_r_8h_1aa59853131efc1250aab72d6f302f9082" kindref="member">selection_by_count_rate</ref>(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n_out,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_time,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_ph_max</highlight></codeline>
<codeline lineno="84"><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_t_t_r_8h_1a1407532c07ea37bb757ae0af51994667" kindref="member">get_ranges_channel</ref>(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**ranges,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n_range,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*channel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_channel,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selection_channel</highlight></codeline>
<codeline lineno="102"><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_t_t_r_8h_1a8811bfe0a582972e8da026311c8bdf7b" kindref="member">getIndicesByChannel</ref>(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n_out,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_in,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*routing_channels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_routing_channels);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="122" refid="_t_t_t_r_8h_1a8a796064eedb4b1bac8022ec564fa830" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_t_t_r_8h_1a8a796064eedb4b1bac8022ec564fa830" kindref="member">get_array</ref>(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_valid_events,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*array,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>**out,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n_out</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_out<sp/>=<sp/>(int)<sp/>n_valid_events;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*out)<sp/>=<sp/>(T*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>n_valid_events);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n_valid_events;<sp/>i++)<sp/>(*out)[i]<sp/>=<sp/>array[i];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::bad_typeid&amp;<sp/>bt){</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bad_typeid<sp/>caught:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bt.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_t_t_r_8h_1a01be187530de4f790015978c6eff97c1" kindref="member">get_ranges_time_window</ref>(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**ranges,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n_range,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_time,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tw_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tw_max,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_ph_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_ph_max</highlight></codeline>
<codeline lineno="182"><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_t_t_t_r" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_t_t_t_r" kindref="compound">TTTR</ref><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TTTR*&gt;<sp/>children;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_header" kindref="compound">Header</ref><sp/>*header;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>overflow_counter;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>int&gt;<sp/>container_names<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{std::string(</highlight><highlight class="stringliteral">&quot;PTU&quot;</highlight><highlight class="normal">),<sp/>0},</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{std::string(</highlight><highlight class="stringliteral">&quot;HT3&quot;</highlight><highlight class="normal">),<sp/>1},</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{std::string(</highlight><highlight class="stringliteral">&quot;SPC-130&quot;</highlight><highlight class="normal">),<sp/>2},</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{std::string(</highlight><highlight class="stringliteral">&quot;SPC-600_256&quot;</highlight><highlight class="normal">),<sp/>3},</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{std::string(</highlight><highlight class="stringliteral">&quot;SPC-600_4096&quot;</highlight><highlight class="normal">),<sp/>4},</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{std::string(</highlight><highlight class="stringliteral">&quot;PHOTON-HDF5&quot;</highlight><highlight class="normal">),<sp/>5}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*processRecord_t)(</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t&amp;,<sp/><sp/></highlight><highlight class="comment">//<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t&amp;,<sp/><sp/></highlight><highlight class="comment">//<sp/>overflow<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t&amp;,<sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>number<sp/>of<sp/>sync<sp/>pulses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t&amp;,<sp/><sp/></highlight><highlight class="comment">//<sp/>microtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t&amp;,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>channel<sp/>number<sp/>(16bit<sp/>more<sp/>than<sp/>enough,<sp/>negative<sp/>numbers<sp/>-<sp/>potential<sp/>future<sp/>special<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t&amp;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>event<sp/>type:<sp/>photon,<sp/>or<sp/>marker<sp/>(overflows<sp/>are<sp/>treated<sp/>separately<sp/>and<sp/>removed<sp/>during<sp/>reading)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>processRecord_t&gt;<sp/>processRecord_map<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="_header_8h_1a27944f5cdc8cc68998f3d57652d67ccf" kindref="member">PQ_RECORD_TYPE_HHT2v1</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_record_reader_8h_1a7c83927ae75f0b31639440129b48ef2b" kindref="member">ProcessHHT2v1</ref>},</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="_header_8h_1afff8814f1ce6c1ec6945a450999b5615" kindref="member">PQ_RECORD_TYPE_HHT2v2</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_record_reader_8h_1a546ff8086bff7209f68cac95a4c416a7" kindref="member">ProcessHHT2v2</ref>},</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="_header_8h_1a51a3e2a69729b62d7892f1cb6ff7ca35" kindref="member">PQ_RECORD_TYPE_HHT3v1</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_record_reader_8h_1ae3308f8b3837107a6171f6a86872c8e9" kindref="member">ProcessHHT3v1</ref>},</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="_header_8h_1a971025b1c4f058c5846407bae0f4e147" kindref="member">PQ_RECORD_TYPE_HHT3v2</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_record_reader_8h_1aab8b96a0d785b3f691a34d85d0c2da76" kindref="member">ProcessHHT3v2</ref>},</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="_header_8h_1a4d9e0576a91784a7f451bc4c0e83722a" kindref="member">PQ_RECORD_TYPE_PHT2</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_record_reader_8h_1a88dec77cba7f3785165d6774c8ec07a2" kindref="member">ProcessPHT2</ref>},</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="_header_8h_1af56c35330bdb11f4ee781b77c30ed9dd" kindref="member">PQ_RECORD_TYPE_PHT3</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_record_reader_8h_1ad3ed538072a55bc91d73f45806c9cdd2" kindref="member">ProcessPHT3</ref>},</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="_header_8h_1a3d39628a83facb60743d4f3208ec8811" kindref="member">BH_RECORD_TYPE_SPC600_256</ref>,<sp/><sp/><ref refid="_record_reader_8h_1accc9659cd21fe76853878b72243423ab" kindref="member">ProcessSPC600_256</ref>},</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="_header_8h_1a8baca534e2d74198b975edb96b3f57c2" kindref="member">BH_RECORD_TYPE_SPC600_4096</ref>,<sp/><ref refid="_record_reader_8h_1aeb56e94061994cba32ba92308c1a6d29" kindref="member">ProcessSPC600_4096</ref>},</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="_header_8h_1ac29e379de1f911017fdf4b41c47f3cdc" kindref="member">BH_RECORD_TYPE_SPC130</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_record_reader_8h_1a593d01306230048302f8d94189c20344" kindref="member">ProcessSPC130</ref>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tttr_container_type;<sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>Becker&amp;Hickl<sp/>(BH)<sp/>SPC,<sp/>PicoQuant<sp/>(PQ)<sp/>HT3,<sp/>PQ-PTU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tttr_record_type;<sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>BH<sp/>spc132,<sp/>PQ<sp/>HydraHarp<sp/>(HH)<sp/>T3,<sp/>PQ<sp/>HH<sp/>T2,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_per_record;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>std::FILE<sp/>*fpin;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>hid_t<sp/><sp/><sp/><sp/><sp/><sp/>hdf5_file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*HDF5<sp/>file<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fp_records_begin;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>TTTRRecord;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*processRecord)(</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t&amp;,<sp/></highlight><highlight class="comment">//<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t&amp;,<sp/></highlight><highlight class="comment">//<sp/>overflow<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t&amp;,<sp/></highlight><highlight class="comment">//<sp/>true<sp/>number<sp/>of<sp/>sync<sp/>pulses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t&amp;,<sp/></highlight><highlight class="comment">//<sp/>microtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t&amp;,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>channel<sp/>number<sp/>(16bit<sp/>more<sp/>than<sp/>enough,<sp/>negative<sp/>numbers<sp/>-<sp/>potential<sp/>future<sp/>special<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t&amp;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>event<sp/>type:<sp/>photon,<sp/>or<sp/>marker<sp/>(overflows<sp/>are<sp/>treated<sp/>separately<sp/>and<sp/>removed<sp/>during<sp/>reading)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*macro_times;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*micro_times;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*routing_channels;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*event_types;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_hdf_file(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1aca21b423928f92dce134c2b98057cc0a" kindref="member">allocate_memory_for_records</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_rec);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1af80300e1fdd7ba618dbb33853c832a22" kindref="member">deallocate_memory_of_records</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a202a9bb9bc04ccbb056c1d73893b1c4e" kindref="member">read_records</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_rec,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rewind,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>chunk);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a202a9bb9bc04ccbb056c1d73893b1c4e" kindref="member">read_records</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_rec);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a202a9bb9bc04ccbb056c1d73893b1c4e" kindref="member">read_records</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="class_t_t_t_r_1a019c849293e3d3be29f5f6459bee6181" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a019c849293e3d3be29f5f6459bee6181" kindref="member">n_records_in_file</ref>;</highlight></codeline>
<codeline lineno="309" refid="class_t_t_t_r_1a4cc37548f6564c05496d95ca1b25b2d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a4cc37548f6564c05496d95ca1b25b2d4" kindref="member">n_records_read</ref>;</highlight></codeline>
<codeline lineno="311" refid="class_t_t_t_r_1aabb647d22bb6cb17ff1b843c93b9de3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1aabb647d22bb6cb17ff1b843c93b9de3a" kindref="member">n_valid_events</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1abe71172a7c0339f09e336a0dcfb48e94" kindref="member">get_macro_time</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n_out);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1af68c9a5a7c3ec01a5097864b4d97975a" kindref="member">get_micro_time</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n_out);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a4171e1f0e8a709aae25cedbdd66a2bfb" kindref="member">get_routing_channel</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**<sp/>out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n_out);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a449e92c3f30e013991cfdd1449aea609" kindref="member">get_event_type</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**<sp/>out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n_out);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a500fa2f0fe263e7e309ed1c2be451114" kindref="member">get_n_valid_events</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_t_t_r" kindref="compound">TTTR</ref>*<sp/><ref refid="class_t_t_t_r_1aa9b6d4e201da050bf7ed1112c605ce72" kindref="member">select</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*selection,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_selection);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_t_t_r_1ad5537ce07845c94629ca3b88008a7597" kindref="member">TTTR</ref>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors<sp/>are<sp/>to<sp/>read<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_t_t_r_1ad5537ce07845c94629ca3b88008a7597" kindref="member">TTTR</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>container_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>read_input);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_t_t_r_1ad5537ce07845c94629ca3b88008a7597" kindref="member">TTTR</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>container_type);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_t_t_r_1ad5537ce07845c94629ca3b88008a7597" kindref="member">TTTR</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>container_type);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors<sp/>for<sp/>in<sp/>memory<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_t_t_r_1ad5537ce07845c94629ca3b88008a7597" kindref="member">TTTR</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*n_sync_pulses,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*micro_times,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*routing_channels,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*event_types</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_t_t_r_1ad5537ce07845c94629ca3b88008a7597" kindref="member">TTTR</ref>(<ref refid="class_t_t_t_r" kindref="compound">TTTR</ref><sp/>*parent,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*selection,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_selection</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_t_t_r_1ab5fdf04da2517b2cfbfcb279f9e9aee0" kindref="member">~TTTR</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_t_t_t_r_1a3d856d880c72ad9772de2a774066cced" kindref="member">get_filename</ref>();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a9c96c502be774e60f4bcc3442c7a5011" kindref="member">get_selection_by_channel</ref>(</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n_out,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_in</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_header" kindref="compound">Header</ref><sp/><ref refid="class_t_t_t_r_1a7953fb4f0b1d7ada40d6ff19cec45672" kindref="member">get_header</ref>();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a00b74138ed8a061e30a615dfff328960" kindref="member">get_n_events</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a4a8f9c4d510819de9ec7a7151c10a05e" kindref="member">read_file</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>container_type);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_t_t_t_r_1a4a8f9c4d510819de9ec7a7151c10a05e" kindref="member">read_file</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal">};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//TTTRLIB_TTTR_H</highlight></codeline>
    </programlisting>
    <location file="TTTR.h"/>
  </compounddef>
</doxygen>
