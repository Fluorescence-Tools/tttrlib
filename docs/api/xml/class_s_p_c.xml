<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_s_p_c" kind="class" language="C++" prot="public">
    <compoundname>SPC</compoundname>
    <basecompoundref refid="class_t_t_t_r" prot="public" virt="non-virtual">TTTR</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_p_c_1a1c1615113a627c20eb78e63180b60115" prot="private" static="no" mutable="no">
        <type>void(SPC::*</type>
        <definition>void(SPC::* SPC::processRecord) (uint32_t)</definition>
        <argsstring>)(uint32_t)</argsstring>
        <name>processRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the reading routine for a photon. This is a pointer to the actual method processing the record. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="73" column="1" bodyfile="BeckerHickl.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_c_1a2f956ee189f1b3ba4c2a0346f759f28a" prot="private" static="no" mutable="no">
        <type><ref refid="unionbh__spc130__record__t" kindref="compound">bh_spc130_record_t</ref></type>
        <definition>bh_spc130_record_t SPC::bh_spc130_rec</definition>
        <argsstring></argsstring>
        <name>bh_spc130_rec</name>
        <briefdescription>
<para>these records are temporary allocated to read the photons </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="76" column="1" bodyfile="BeckerHickl.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_c_1ab42e1ca03f008bd27a3784e62558df22" prot="private" static="no" mutable="no">
        <type><ref refid="unionbh__spc130__overflow__t" kindref="compound">bh_spc130_overflow_t</ref></type>
        <definition>bh_spc130_overflow_t SPC::bh_spc130_ovf</definition>
        <argsstring></argsstring>
        <name>bh_spc130_ovf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="77" column="1" bodyfile="BeckerHickl.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_c_1a56e676a06597940ea5e635b04714054c" prot="private" static="no" mutable="no">
        <type><ref refid="unionbh__spc600__256__record__t" kindref="compound">bh_spc600_256_record_t</ref></type>
        <definition>bh_spc600_256_record_t SPC::bh_spc600_256_rec</definition>
        <argsstring></argsstring>
        <name>bh_spc600_256_rec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="78" column="1" bodyfile="BeckerHickl.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_c_1a6682ab2f57f80f61d517adfb3971d269" prot="private" static="no" mutable="no">
        <type><ref refid="unionbh__spc600__256__overflow__t" kindref="compound">bh_spc600_256_overflow_t</ref></type>
        <definition>bh_spc600_256_overflow_t SPC::bh_spc600_256_ovf</definition>
        <argsstring></argsstring>
        <name>bh_spc600_256_ovf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="79" column="1" bodyfile="BeckerHickl.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_p_c_1a7afb568ee39f42b34c97dd8d54bc101e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPC::read_record</definition>
        <argsstring>()</argsstring>
        <name>read_record</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_c_1acf6bfd06af6d81e61971a74e4ac78aa9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPC::ProcessSPC600_256</definition>
        <argsstring>(uint32_t TTTRRecord)</argsstring>
        <name>ProcessSPC600_256</name>
        <param>
          <type>uint32_t</type>
          <declname>TTTRRecord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_c_1a35613fb6866d61b2e50656351531afee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPC::ProcessSPC130</definition>
        <argsstring>(uint32_t TTTRRecord)</argsstring>
        <name>ProcessSPC130</name>
        <param>
          <type>uint32_t</type>
          <declname>TTTRRecord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="86" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_p_c_1ad84b3706123b6def47734acde8eb8e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPC::SPC</definition>
        <argsstring>()</argsstring>
        <name>SPC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_c_1afa1d1abcb27521255684319bbbab7f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPC::SPC</definition>
        <argsstring>(const char *fn, char file_containter_type)</argsstring>
        <name>SPC</name>
        <param>
          <type>const char *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>char</type>
          <declname>file_containter_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_c_1a309e6422c4490dc8f28265cd0107fe81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPC::~SPC</definition>
        <argsstring>()</argsstring>
        <name>~SPC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BeckerHickl.h" line="91" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="42">
        <label>SPC</label>
        <link refid="class_s_p_c"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>TTTR</label>
        <link refid="class_t_t_t_r"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="46">
        <label>Header</label>
        <link refid="class_header"/>
      </node>
      <node id="44">
        <label>SPC</label>
        <link refid="class_s_p_c"/>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>TTTR</label>
        <link refid="class_t_t_t_r"/>
        <childnode refid="46" relation="usage">
          <edgelabel>header</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BeckerHickl.h" line="68" column="1" bodyfile="BeckerHickl.h" bodystart="68" bodyend="93"/>
    <listofallmembers>
      <member refid="class_t_t_t_r_1aca21b423928f92dce134c2b98057cc0a" prot="protected" virt="non-virtual"><scope>SPC</scope><name>allocate_memory_for_records</name></member>
      <member refid="class_s_p_c_1ab42e1ca03f008bd27a3784e62558df22" prot="private" virt="non-virtual"><scope>SPC</scope><name>bh_spc130_ovf</name></member>
      <member refid="class_s_p_c_1a2f956ee189f1b3ba4c2a0346f759f28a" prot="private" virt="non-virtual"><scope>SPC</scope><name>bh_spc130_rec</name></member>
      <member refid="class_s_p_c_1a6682ab2f57f80f61d517adfb3971d269" prot="private" virt="non-virtual"><scope>SPC</scope><name>bh_spc600_256_ovf</name></member>
      <member refid="class_s_p_c_1a56e676a06597940ea5e635b04714054c" prot="private" virt="non-virtual"><scope>SPC</scope><name>bh_spc600_256_rec</name></member>
      <member refid="class_t_t_t_r_1a3ec936c86b608f0d18f8d7423e3d5954" prot="protected" virt="non-virtual"><scope>SPC</scope><name>bytes_per_record</name></member>
      <member refid="class_t_t_t_r_1a905b34264254fa304376aae16b676726" prot="protected" virt="non-virtual"><scope>SPC</scope><name>channel</name></member>
      <member refid="class_t_t_t_r_1af80300e1fdd7ba618dbb33853c832a22" prot="protected" virt="non-virtual"><scope>SPC</scope><name>deallocate_memory_of_records</name></member>
      <member refid="class_t_t_t_r_1acd4cf4ad564875dd457724f9e376860f" prot="protected" virt="non-virtual"><scope>SPC</scope><name>filename</name></member>
      <member refid="class_t_t_t_r_1af671de6a8f16a86e22a713333a27acef" prot="protected" virt="non-virtual"><scope>SPC</scope><name>fp_records_begin</name></member>
      <member refid="class_t_t_t_r_1a3468b73e14d0744f097c7ad5e16d1c58" prot="protected" virt="non-virtual"><scope>SPC</scope><name>fpin</name></member>
      <member refid="class_t_t_t_r_1ae785ae2fe0b8f799efc3ed4040df4150" prot="public" virt="non-virtual"><scope>SPC</scope><name>getFilename</name></member>
      <member refid="class_t_t_t_r_1aa5d345bd2990e4610dd1a6c13c173fdd" prot="public" virt="non-virtual"><scope>SPC</scope><name>getHeader</name></member>
      <member refid="class_t_t_t_r_1a3dc91742a970924b134fdf53fd0aa377" prot="public" virt="non-virtual"><scope>SPC</scope><name>getIndicesByChannel</name></member>
      <member refid="class_t_t_t_r_1ae1def73f40a4fab2f647450b75d205ba" prot="public" virt="non-virtual"><scope>SPC</scope><name>getNumerOfRecordsInFile</name></member>
      <member refid="class_t_t_t_r_1a61e222632812c94981c8fabeba0e112b" prot="protected" virt="non-virtual"><scope>SPC</scope><name>header</name></member>
      <member refid="class_t_t_t_r_1acbe6978050aa7fc40ffd0623a36a4577" prot="protected" virt="non-virtual"><scope>SPC</scope><name>micro_time</name></member>
      <member refid="class_t_t_t_r_1a6a2231c93858bae8ab7eae7a737ba8b6" prot="public" virt="non-virtual"><scope>SPC</scope><name>micro_times</name></member>
      <member refid="class_t_t_t_r_1a019c849293e3d3be29f5f6459bee6181" prot="public" virt="non-virtual"><scope>SPC</scope><name>n_records_in_file</name></member>
      <member refid="class_t_t_t_r_1a4cc37548f6564c05496d95ca1b25b2d4" prot="public" virt="non-virtual"><scope>SPC</scope><name>n_records_read</name></member>
      <member refid="class_t_t_t_r_1ac7cf82904283d479e50b64cfb7aefd73" prot="public" virt="non-virtual"><scope>SPC</scope><name>macro_times</name></member>
      <member refid="class_t_t_t_r_1ac76a0d40ee21f63983c29a72137892f6" prot="public" virt="non-virtual"><scope>SPC</scope><name>n_valid_events</name></member>
      <member refid="class_t_t_t_r_1abc7c44f533a9ef11094baae7498e5cd8" prot="protected" virt="non-virtual"><scope>SPC</scope><name>overflow_counter</name></member>
      <member refid="class_s_p_c_1a1c1615113a627c20eb78e63180b60115" prot="private" virt="non-virtual"><scope>SPC</scope><name>processRecord</name></member>
      <member refid="class_s_p_c_1a35613fb6866d61b2e50656351531afee" prot="protected" virt="non-virtual"><scope>SPC</scope><name>ProcessSPC130</name></member>
      <member refid="class_s_p_c_1acf6bfd06af6d81e61971a74e4ac78aa9" prot="protected" virt="non-virtual"><scope>SPC</scope><name>ProcessSPC600_256</name></member>
      <member refid="class_t_t_t_r_1a499f299893269806ef42cca2227fd75b" prot="public" virt="non-virtual"><scope>SPC</scope><name>read_file</name></member>
      <member refid="class_t_t_t_r_1a4a8f9c4d510819de9ec7a7151c10a05e" prot="public" virt="non-virtual"><scope>SPC</scope><name>read_file</name></member>
      <member refid="class_s_p_c_1a7afb568ee39f42b34c97dd8d54bc101e" prot="protected" virt="non-virtual"><scope>SPC</scope><name>read_record</name></member>
      <member refid="class_t_t_t_r_1a8eb7661d2dc6180a0f69c07810705f4f" prot="protected" virt="non-virtual"><scope>SPC</scope><name>read_records</name></member>
      <member refid="class_t_t_t_r_1a1b4d9a088a0898de13a964bd6aef02fa" prot="protected" virt="non-virtual"><scope>SPC</scope><name>read_records</name></member>
      <member refid="class_t_t_t_r_1a202a9bb9bc04ccbb056c1d73893b1c4e" prot="protected" virt="non-virtual"><scope>SPC</scope><name>read_records</name></member>
      <member refid="class_t_t_t_r_1a08631a98541e230844ac020613686a6a" prot="public" virt="non-virtual"><scope>SPC</scope><name>record_types</name></member>
      <member refid="class_t_t_t_r_1a9a9d0333a478637cf7d82a218cb80250" prot="public" virt="non-virtual"><scope>SPC</scope><name>routing_channels</name></member>
      <member refid="class_s_p_c_1ad84b3706123b6def47734acde8eb8e0e" prot="public" virt="non-virtual"><scope>SPC</scope><name>SPC</name></member>
      <member refid="class_s_p_c_1afa1d1abcb27521255684319bbbab7f77" prot="public" virt="non-virtual"><scope>SPC</scope><name>SPC</name></member>
      <member refid="class_t_t_t_r_1abec434361a9bf4ec5bf07954d915b8b2" prot="protected" virt="non-virtual"><scope>SPC</scope><name>true_nsync</name></member>
      <member refid="class_t_t_t_r_1ad5537ce07845c94629ca3b88008a7597" prot="public" virt="non-virtual"><scope>SPC</scope><name>TTTR</name></member>
      <member refid="class_t_t_t_r_1af6cb99fa270ec32d7cd73211eb9a25eb" prot="public" virt="non-virtual"><scope>SPC</scope><name>TTTR</name></member>
      <member refid="class_t_t_t_r_1acb25daf91a93eb600520c211d739f829" prot="public" virt="non-virtual"><scope>SPC</scope><name>TTTR</name></member>
      <member refid="class_t_t_t_r_1a5ebe9e8b44de5824c4a21e0d78497aba" prot="public" virt="non-virtual"><scope>SPC</scope><name>TTTR</name></member>
      <member refid="class_t_t_t_r_1ab036315ae969ac96ddc9ff0e8da492a2" prot="protected" virt="non-virtual"><scope>SPC</scope><name>tttr_container_type</name></member>
      <member refid="class_t_t_t_r_1a4d9262b34b316c922e69b40844f07a77" prot="protected" virt="non-virtual"><scope>SPC</scope><name>tttr_record_type</name></member>
      <member refid="class_t_t_t_r_1aeca22c4f524dbb501b7545d397e8f782" prot="protected" virt="non-virtual"><scope>SPC</scope><name>TTTRRecord</name></member>
      <member refid="class_s_p_c_1a309e6422c4490dc8f28265cd0107fe81" prot="public" virt="non-virtual"><scope>SPC</scope><name>~SPC</name></member>
      <member refid="class_t_t_t_r_1ab5fdf04da2517b2cfbfcb279f9e9aee0" prot="public" virt="non-virtual"><scope>SPC</scope><name>~TTTR</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
